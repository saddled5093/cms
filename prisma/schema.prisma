
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

// We removed the UserRole enum and will use String for the role field.
// Application logic should ensure role is one of "USER" or "ADMIN".

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  role      String // Changed from UserRole to String. Expected values: "USER", "ADMIN"
  notes     Note[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Note {
  id            String     @id @default(cuid())
  title         String
  content       String
  author        User       @relation(fields: [authorId], references: [id])
  authorId      String
  categories    Category[] @relation("NoteToCategory")
  tags          String? // Stored as JSON string: "[\"tag1\", \"tag2\"]" or null
  province      String
  phoneNumbers  String? // Stored as JSON string: "[\"num1\", \"num2\"]" or null
  eventDate     DateTime
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  isArchived    Boolean    @default(false)
  isPublished   Boolean    @default(false)
  rating        Int?       @default(0) // Rating from 0 to 5
  comments      Comment[]
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  notes Note[] @relation("NoteToCategory")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  note      Note     @relation(fields: [noteId], references: [id])
  noteId    String
}
